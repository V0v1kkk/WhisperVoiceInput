<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:WhisperVoiceInput.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:models="using:WhisperVoiceInput.Models"
        xmlns:converters="using:WhisperVoiceInput.Converters"
        mc:Ignorable="d" d:DesignWidth="570" d:DesignHeight="1000"
        x:Class="WhisperVoiceInput.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        Width="570"
        Height="1000"
        Icon="/Assets/lecturer-white.png"
        Title="WhisperVoiceInput Settings"
        Closing="Window_Closing">

    <Window.Resources>
        <converters:EnumToBooleanConverter x:Key="EnumToBooleanConverter"/>
    </Window.Resources>
    
    <Window.Styles>
        <!-- Common Styles -->
        <Style Selector="TextBlock.SectionTitle">
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Margin" Value="0,0,0,2"/>
        </Style>
        
        <Style Selector="TextBlock.Description">
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Opacity" Value="0.7"/>
            <Setter Property="Margin" Value="0,0,0,4"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>
        
        <Style Selector="HeaderedContentControl">
            <Setter Property="Template">
                <ControlTemplate>
                    <StackPanel>
                        <TextBlock Text="{TemplateBinding Header}"
                                   FontWeight="Bold"
                                   FontSize="16"
                                   Margin="0,0,0,8"/>
                        <Border BorderBrush="{DynamicResource SystemControlHighlightBaseLowBrush}"
                                BorderThickness="1"
                                Padding="10"
                                CornerRadius="5"
                                Margin="0,0,0,8">
                            <ContentPresenter Content="{TemplateBinding Content}"/>
                        </Border>
                    </StackPanel>
                </ControlTemplate>
            </Setter>
        </Style>
        
        <!-- Custom RadioButton Style with Caption -->
        <Style Selector="RadioButton.OptionWithCaption">
            <Setter Property="Margin" Value="0,8,0,0"/>
            <Setter Property="Padding" Value="8,4,0,4"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <ControlTemplate>
                    <Grid ColumnDefinitions="Auto,*">
                        <!-- Radio Button Circle -->
                        <Ellipse Grid.Column="0" x:Name="OuterEllipse"
                               Width="18" Height="18"
                               Stroke="{DynamicResource  SystemControlForegroundBaseHighBrush}"
                               StrokeThickness="1"
                               Fill="Transparent"
                               VerticalAlignment="Top"
                               Margin="0,4,0,0"/>
                        
                        <Ellipse Grid.Column="0" x:Name="CheckEllipse"
                                 Width="17" Height="17"
                               Fill="{DynamicResource SystemControlHighlightAccentBrush}"
                               VerticalAlignment="Top"
                               HorizontalAlignment="Center"
                               Margin="0,4,0,0"
                               IsVisible="{TemplateBinding IsChecked}"/>
                        
                        <!-- Content Area -->
                        <StackPanel Grid.Column="1" Margin="8,0,0,0">
                            <!-- Main Option Text -->
                            <ContentPresenter x:Name="ContentPresenter"
                                           Content="{TemplateBinding Content}"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Left"
                                           Margin="0,4,0,0"/>
                            
                            <!-- Caption (Description) -->
                            <TextBlock x:Name="CaptionText"
                                     Text="{TemplateBinding Tag}"
                                     Classes="Description"
                                     />
                        </StackPanel>
                    </Grid>
                </ControlTemplate>
            </Setter>
        </Style>

        <!-- Dependent action button placed to the right of an input (TextBox/ComboBox) -->
        <Style Selector="Button.Dependent">
            <Setter Property="Margin" Value="8,0,0,0"/>
        </Style>
        
        
        <Style Selector="TextBox.Multiline">
            <Setter Property="AcceptsReturn" Value="True"/>
            <Setter Property="MinHeight" Value="60"/>
            <Setter Property="Height" Value="100"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        </Style>

        <Style Selector="TextBox.Secret">
            <Setter Property="PasswordChar" Value="â€¢"/>
        </Style>

        <Style Selector="StackPanel.Section">
            <Setter Property="Spacing" Value="12"/>
        </Style>

        
        <!-- Common NumericUpDown style for timeouts -->
        <Style Selector="NumericUpDown.Timeout">
            <Setter Property="Minimum" Value="1"/>
            <Setter Property="Maximum" Value="1440"/>
            <Setter Property="Width" Value="120"/>
            <Setter Property="FormatString" Value="0"/>
            <Setter Property="Increment" Value="1"/>
        </Style>

        <!-- Common row style for timeout toggle+label containers -->
        <Style Selector="StackPanel.TimeoutRow">
            <Setter Property="Orientation" Value="Horizontal"/>
            <Setter Property="Spacing" Value="8"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

    </Window.Styles>

    <Design.DataContext>
        <vm:MainWindowViewModel/>
    </Design.DataContext>

    <!-- ScrollViewer to allow vertical scrolling -->
    <ScrollViewer VerticalScrollBarVisibility="Auto">
            <StackPanel Margin="15" Spacing="20">

            <!-- Connection Settings -->
            <HeaderedContentControl Header="Connection Settings">
                <StackPanel Classes="Section">
                    
                    <!-- Server Address -->
                    <StackPanel>
                        <TextBlock Text="Server Address (required)"
                                 Classes="SectionTitle"/>
                        <TextBlock Text="Enter the base URL before '/v1/audio/translations'."
                                 Classes="Description"/>
                        <TextBox Text="{Binding ServerAddressInput}"
                                Watermark="https://api.openai.com"/>
                    </StackPanel>

                    <!-- API Key -->
                    <StackPanel>
                        <TextBlock Text="API Key"
                                 Classes="SectionTitle"/>
                        <TextBlock Text="Your secret key from the provider."
                                 Classes="Description"/>
                        <TextBox Text="{Binding ApiKeyInput}"
                                Classes="Secret"
                                Watermark="sk-..."/>
                    </StackPanel>

                    <!-- Model -->
                    <StackPanel>
                        <TextBlock Text="Model"
                                 Classes="SectionTitle"/>
                        <TextBlock Text="Name of the model to use, e.g. whisper-large."
                                 Classes="Description"/>
                        <TextBox Text="{Binding ModelInput}"
                                Watermark="whisper-1"/>
                    </StackPanel>

                    <!-- Language -->
                    <StackPanel>
                        <TextBlock Text="Language"
                                 Classes="SectionTitle"/>
                        <TextBlock Text="Preferred language code (e.g. en, es, fr)."
                                 Classes="Description"/>
                        <TextBox Text="{Binding LanguageInput}"
                                Watermark="en"/>
                    </StackPanel>

                    <!-- Prompt -->
                    <StackPanel>
                        <TextBlock Text="Prompt"
                                 Classes="SectionTitle"/>
                        <TextBlock Text="Enter your own specific words or phrases to guide recognition."
                                 Classes="Description"/>
                        <TextBox Text="{Binding PromptInput}"
                                Classes="Multiline"
                                Watermark="Enter your unique words and phrases"/>
                    </StackPanel>
                </StackPanel>
            </HeaderedContentControl>
            
            <!-- Result Output Settings -->
            <HeaderedContentControl Header="Result Output Settings">
                <StackPanel Classes="Section">
                    <StackPanel>
                        <TextBlock Text="Output Method"
                                 Classes="SectionTitle"/>
                        <TextBlock Text="Choose how the transcribed text should be output."
                                 Classes="Description"/>
                                 
                        <RadioButton Content="Copy to Clipboard"
                                   Classes="OptionWithCaption"
                                   Tag="Requires pop-up window during the startup"
                                   IsChecked="{Binding OutputTypeInput, 
                                   Converter={StaticResource EnumToBooleanConverter}, 
                                   ConverterParameter={x:Static models:ResultOutputType.ClipboardAvaloniaApi}}"/>
                                   
                        <RadioButton Content="Copy to Clipboard via wl-copy"
                                   Classes="OptionWithCaption"
                                   Tag="Uses the wl-copy command to copy text to clipboard"
                                   IsChecked="{Binding OutputTypeInput, 
                                   Converter={StaticResource EnumToBooleanConverter}, 
                                   ConverterParameter={x:Static models:ResultOutputType.WlCopy}}"/>
                                   
                        <RadioButton Content="Type via ydotool"
                                   Classes="OptionWithCaption"
                                   Tag="Works well only if transcription language equals to keyboard layout"
                                   IsChecked="{Binding OutputTypeInput, 
                                   Converter={StaticResource EnumToBooleanConverter}, 
                                   ConverterParameter={x:Static models:ResultOutputType.YdotoolType}}"/>
                                   
                        <RadioButton Content="Type via wtype"
                                   Classes="OptionWithCaption"
                                   Tag="Alternative typing method for Wayland"
                                   IsChecked="{Binding OutputTypeInput, 
                                   Converter={StaticResource EnumToBooleanConverter}, 
                                   ConverterParameter={x:Static models:ResultOutputType.WtypeType}}"/>
                    </StackPanel>
                </StackPanel>
                
            </HeaderedContentControl>

            <!-- Audio Settings -->
            <HeaderedContentControl Header="Audio Settings">
                <StackPanel Classes="Section">
                    <!-- Input Device (Capture) Selection -->
                    <StackPanel>
                        <TextBlock Text="Input Device"
                                   Classes="SectionTitle"/>
                        <TextBlock Text="Select microphone/capture device."
                                   Classes="Description"/>
                        <Grid ColumnDefinitions="*,Auto" RowDefinitions="Auto">
                            <ComboBox Grid.Column="0"
                                      ItemsSource="{Binding AvailableCaptureDevices}"
                                      SelectedItem="{Binding SelectedCaptureDeviceItem}"
                                      HorizontalAlignment="Stretch"
                                      MinWidth="300"/>
                            <Button Grid.Column="1"
                                    Content="Refresh"
                                    Classes="Dependent"
                                    Command="{Binding RefreshCaptureDevicesCommand}"/>
                        </Grid>
                    </StackPanel>
                    
                    <!-- Save Audio File Toggle -->
                    <StackPanel>
                        <TextBlock Text="Save Audio File"
                                 Classes="SectionTitle"/>
                        <TextBlock Text="Check to enable saving the recorded audio locally."
                                 Classes="Description"/>
                        <ToggleSwitch IsChecked="{Binding SaveAudioFileInput}"/>
                    </StackPanel>

                    <!-- Audio File Save Path -->
                    <StackPanel IsEnabled="{Binding SaveAudioFileInput}">
                        <TextBlock Text="Audio File Save Path"
                                  Classes="SectionTitle"/>
                        <TextBlock Text="Location where the audio file will be saved (required if saving is enabled)."
                                  Classes="Description"/>
                        <Grid ColumnDefinitions="*,Auto" RowDefinitions="Auto,Auto">
                            <TextBox x:Name="AudioPathTextBox" 
                                     Grid.Column="0" Grid.Row="0"
                                     VerticalAlignment="Top"
                                     Text="{Binding AudioFilePathInput}"
                                     Watermark="Audio file save path..."/>
                            <Button Grid.Column="1" Grid.Row="0"
                                    Content="Browse..."
                                    Classes="Dependent"
                                    VerticalAlignment="Top"
                                    Command="{Binding SelectFolderCommand}"/>
                        </Grid>
                    </StackPanel>
                </StackPanel>
            </HeaderedContentControl>

            <!-- Post-Processing Settings -->
            <HeaderedContentControl Header="Post-Processing Settings">
                <StackPanel Classes="Section">
                    
                    <!-- Enable Post-Processing -->
                    <StackPanel>
                        <TextBlock Text="Enable Post-Processing"
                                 Classes="SectionTitle"/>
                        <TextBlock Text="Use an AI model to improve and format the transcribed text."
                                 Classes="Description"/>
                        <ToggleSwitch IsChecked="{Binding PostProcessingEnabledInput}"/>
                    </StackPanel>

                    <!-- Dataset saving controls -->
                    <StackPanel Spacing="6" IsEnabled="{Binding PostProcessingEnabledInput}">
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Spacing="8">
                            <ToggleSwitch IsChecked="{Binding DatasetSavingEnabledInput}"/>
                            <TextBlock Text="Save dataset (original / processed pairs)" VerticalAlignment="Center"/>
                        </StackPanel>
                        <Grid ColumnDefinitions="*,Auto" RowDefinitions="Auto,Auto" 
                              IsEnabled="{Binding DatasetSavingEnabledInput}">
                            <TextBox x:Name="DatasetPathTextBox" 
                                     Grid.Column="0" Grid.Row="0" 
                                     HorizontalAlignment="Stretch" 
                                     VerticalAlignment="Top" 
                                     Text="{Binding DatasetFilePathInput}" 
                                     Watermark="Select dataset file..."/>
                            <Button Grid.Column="1" Grid.Row="0" 
                                    Content="Browse..." 
                                    Classes="Dependent"
                                    VerticalAlignment="Top" 
                                    Command="{Binding SelectDatasetFileCommand}"/>
                        </Grid>
                        <TextBlock Classes="Description" Text="Each entry will be appended as: &lt;original&gt; newline '-' newline &lt;processed&gt; newline '---'"/>
                    </StackPanel>

                    <!-- Post-Processing Settings Group -->
                    <StackPanel IsEnabled="{Binding PostProcessingEnabledInput}" Classes="Section">
                        
                        <!-- API URL -->
                        <StackPanel>
                            <TextBlock Text="API URL"
                                     Classes="SectionTitle"/>
                            <TextBlock Text="URL of the OpenAI-compatible API endpoint."
                                     Classes="Description"/>
                            <TextBox Text="{Binding PostProcessingApiUrlInput}"
                                    Watermark="http://localhost:11434"/>
                        </StackPanel>

                        <!-- Model Name -->
                        <StackPanel>
                            <TextBlock Text="Model Name"
                                     Classes="SectionTitle"/>
                            <TextBlock Text="Name of the model to use for post-processing."
                                     Classes="Description"/>
                            <TextBox Text="{Binding PostProcessingModelNameInput}"
                                    Watermark="llama3.2"/>
                        </StackPanel>

                        <!-- API Key -->
                        <StackPanel>
                            <TextBlock Text="API Key (optional)"
                                     Classes="SectionTitle"/>
                            <TextBlock Text="API key for the post-processing service, if required."
                                     Classes="Description"/>
                            <TextBox Text="{Binding PostProcessingApiKeyInput}"
                                    Classes="Secret"
                                    Watermark="Optional API key"/>
                        </StackPanel>

                        <!-- Prompt -->
                        <StackPanel>
                            <TextBlock Text="Post-Processing Prompt"
                                     Classes="SectionTitle"/>
                            <TextBlock Text="Instructions for how to improve the transcribed text."
                                     Classes="Description"/>
                            <TextBox Text="{Binding PostProcessingPromptInput}"
                                    Classes="Multiline"
                                    Watermark="Improve and format the following text:"/>
                        </StackPanel>
                        
                    </StackPanel>
                </StackPanel>
            </HeaderedContentControl>

            <!-- Safety Timeouts (minutes; disabled maps to -1 in settings) -->
            <HeaderedContentControl Header="Safety Timeouts">
                <StackPanel Classes="Section">
                    <TextBlock Text="These are hard cut-offs. Use the switch to enable; value is in minutes." Classes="Description"/>
                    <Grid ColumnDefinitions="Auto,*,Auto" RowDefinitions="Auto,Auto,Auto" >
                        <StackPanel Grid.Row="0" Grid.Column="0" Classes="TimeoutRow">
                            <ToggleSwitch IsChecked="{Binding RecordingTimeoutEnabledInput}"/>
                            <TextBlock Text="Recording timeout (min)" VerticalAlignment="Center"/>
                        </StackPanel>
                        <NumericUpDown Grid.Row="0" Grid.Column="1" Classes="Timeout"  
                                       IsEnabled="{Binding RecordingTimeoutEnabledInput}" 
                                       Value="{Binding RecordingTimeoutMinutesInput}"/>

                        <StackPanel Grid.Row="1" Grid.Column="0" Classes="TimeoutRow">
                            <ToggleSwitch IsChecked="{Binding TranscribingTimeoutEnabledInput}"/>
                            <TextBlock Text="Transcribing timeout (min)" VerticalAlignment="Center"/>
                        </StackPanel>
                        <NumericUpDown Grid.Row="1" Grid.Column="1" Classes="Timeout" 
                                       IsEnabled="{Binding TranscribingTimeoutEnabledInput}" 
                                       Value="{Binding TranscribingTimeoutMinutesInput}"/>

                        <StackPanel Grid.Row="2" Grid.Column="0" Classes="TimeoutRow">
                            <ToggleSwitch IsChecked="{Binding PostProcessingTimeoutEnabledInput}"/>
                            <TextBlock Text="Post-processing timeout (min)" VerticalAlignment="Center"/>
                        </StackPanel>
                        <NumericUpDown Grid.Row="2" Grid.Column="1" Classes="Timeout" 
                                       IsEnabled="{Binding PostProcessingTimeoutEnabledInput}" 
                                       Value="{Binding PostProcessingTimeoutMinutesInput}"/>
                    </Grid>
                </StackPanel>
            </HeaderedContentControl>
            
        </StackPanel>
        
    </ScrollViewer>

</Window>
